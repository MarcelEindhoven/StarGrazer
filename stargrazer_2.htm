<!DOCTYPE html>
<html>  
     <head>  
	<link rel="stylesheet" type="text/css" href="tictactoe.css"/> 
	<script src="Position.js"></script>
	<script src="Star.js"></script>
	<script src="Event.js"></script>
	<script src="Player.js"></script>
	<script type="text/javascript">  
//Global Variables
var nr_columns = 3;
var from = undefined;
var to = undefined;

// retrieve cookie text if available
function getCookieValue(id) {
   // split cookie into elements
   var elements = document.cookie.split(';');
   var result = "";
   for (var i=0; i<elements.length; i++) {
      var e = elements[i];
	  // remove leading whitespace
	  while (e.charAt(0) == ' ') e = e.substring(1);
	  // check if cookie element starts with id=
	  if (e.indexOf(id+"=") == 0) {
	     result = e.substring(id.length+2, e.length);
	  }
   }
   return result;
}

//Instanciate Arrays
window.onload=function(){
	// create universe
	Star.starsCreate();
	// 2 players
	Player.playersCreate(2);
	// set current player to undefined
	setPlayer(-1);
	players[0].name = "Neutral";
	players[1].name = getCookieValue("player1");
	players[2].name = getCookieValue("player2");
	document.getElementById("button_player1").textContent = "I am " + players[1].name;
	document.getElementById("button_player2").firstChild.data = "I am " + players[2].name;
}

// reset screen
function reset() {
	from = undefined;
	to = undefined;
	document.getElementById("from").value = "";
	document.getElementById("to").value = "";
	document.getElementById("ships").value = "1";
	document.getElementById("events").value = "";
	document.getElementById("events").value = "";

	updateSendButton();
}

function setFrom(f) {
	from = f;
	if (undefined == from) {
		reset();
	}
	else {
		document.getElementById("from").value = from.name;
	}
}

function updateStatus(star) {
	var status = "Information on " + star.name + " and its neighbours\nName Distance";
	if (currentPlayer != -1) {
		status = status + " + Ships";
	}
	status = star.nearestStars().reduce(function(stat, s) {
		return stat + "\n" + s.status(star, currentPlayer);
	}, status);
	
	document.getElementById("events").value = status;
}

function updateEvents() {
	var text = "";
	if (currentPlayer > 0) {
		var events = players[currentPlayer].visibleEvents();
		if (events.length > 0) {
			text = "Events visible to you";
			for (var e=0; e < events.length; e++) {
				text = text + "\n" + events[e].text;
			}
		} else {
			text = "Each turn send exactly one fleet one its way\n";
			text = text + "Click on your own star (green), click on a destination and select the fleet size\n";
		}
	} else {
		text = "Press your own button to start your turn";
	}
	document.getElementById("events").value = text;
}

//Game methods
function canvasClicked(canvasNumber){
	// retrieve star located in clicked canvas
	var star = Star.getStar(canvasNumber);

	if(undefined != star) {
		// give info with this star as center
		updateStatus(star);

		if (undefined != from) {
			// from already filled in
			if (star.name == from.name) {
	console.log("reset because " + from.name + " equals " + star.name);
				// clicked canvas equals from, reset
				reset();
			} else {
				to = star;
				document.getElementById("to").value = star.name;
			}
		}
		else {
			if (star.ownerID == currentPlayer) {
				console.log("set from");
				setFrom(star);
			}
		}
	}
	else {
		// clicked canvas is empty, reset all screen info
		console.log("reset because empty canvas clicked");
		reset();
	}

	updateSendButton();
}

function fromList() {
	setFrom(Star.getStarByName(
		document.getElementById("fromList").textContent
	));
}

function fillFromList() {
	// fill from list with stars controlled by current player
	var list = document.getElementById("fromList");
	Star.controlledStars(currentPlayer).forEach(function(star) {
		var option = document.createElement("option");
		option.text = star.name;
		list.add(option);
	});
	// if player controls only one star, select that star as from
	if (1 == list.options.length) {
		fromList();
	}
}

function checkForWinners(symbol){
	var winner = true;
	for(var s = 0;s < stars.length; s++) {
		if (stars[s].ownerID != symbol) {
			winner = false;
		}
	}
	return winner;
}

function playAgain(){
	y=confirm("PLAY AGAIN?");
	if(y==true){
		alert("OKAY! ^^/>");
		location.reload(true);
	}
	else{
		alert("SO LONG,SUCKER!");
		}
}

function cancel() {
}

function updateSendButton() {
	if ((undefined != from) && (undefined != to)){
		document.getElementById("send").disabled = false;
	} else {
		document.getElementById("send").disabled = true;
	}
	// document.getElementById("events").value = "test\ntest";
}

// give the order to send ships
function send() {
	var e = new DepartureEvent(players[currentPlayer].time, from, to, parseInt(document.getElementById("ships").value) );
	players[currentPlayer].increaseTime();
	// check if current player should continue
	if (!players[currentPlayer].turnAllowed()) {
		currentPlayer = -1;
	}
	updateEvents();
	// update which players are allowed to continue their turn
	Player.turnAllowedButtons();

	if(checkForWinners(currentPlayer)){
		var id = "player" + currentPlayer;
		t = document.getElementById(id);
		var name = t.value;
		alert("THE GAME IS OVER! " + name + " has won");
		location.reload(true);
	} else {
		Star.setCurrentPlayer(currentPlayer);
	}
}

// set player and update screen
function setPlayer(id) {
	// reset screen
	reset();
	// set current player, may be undefined
	if (currentPlayer == id) {
		// current player presses his own button, stop his turn
		currentPlayer = -1;
	} else {
		currentPlayer = id;
	}
	if (id >=0 ) {
		var currentTime = players[currentPlayer].time;
	} else {
		currentTime = 0;
	}

	updateSendButton();
	updateEvents();
	Star.setCurrentPlayer(currentPlayer);
	fillFromList();
}

    </script> 
     </head>  
 <body>  
 <h1>Stargrazer</h1
  <table class="w3-table-all" style="width:100%" align="left">
   <tr align="left">
		<th>Player</th>
		<th>Year</th>
   </tr><br>
   <tr align="left">
    <td>
	 <button id = "button_player1" onclick="setPlayer(1)">I am player 1</button>
    </td>
	<td>
	 <input type="text" id="year1" size="4" value="" readonly/>
	</td>
   </tr><br>
   <tr>
    <td>
	 <button id = "button_player2" onclick="setPlayer(2)">I am player 2</button>
    </td>
    <td>
	 <input type="text" id="year2" size="4" value="" readonly/>
	</td>
   </tr>
  </table>
  <table>
	 <tr>
	<br>
	<canvas id = "canvas0"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(00)"></canvas>
	<canvas id = "canvas1"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(01)"></canvas>
	<canvas id = "canvas2"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(02)"></canvas>
	<br>
	<canvas id = "canvas10"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(10)"></canvas>
	<canvas id = "canvas11"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(11)"></canvas>
	<canvas id = "canvas12"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(12)"></canvas>
	<br>
	<canvas id = "canvas20"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(20)"></canvas>
	<canvas id = "canvas21"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(21)"></canvas>
	<canvas id = "canvas22"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(22)"></canvas>
	<br>
	<button onclick="send()" id = "send">Send</button><input type="number" name="ships" id="ships" min="1" max ="999" value="1"/> ships from 
	<table>
	<tr>
	<select id="fromList" onclick = "fromList"></select>
	</tr>
	<tr>
	<input type="text" name="from" id="from" size="9" value="" readonly/> to 
	</tr>
	</table>
	<input type="text" name="to" id="to" size="9" value="" readonly/>
	<button onclick="cancel()">Cancel</button>
	<br>
	</tr>
   <tr>
    <textarea rows="9" cols="90" id="events" readonly>
    </textarea>
   </tr>
	</table>
	</body>
</html> 
