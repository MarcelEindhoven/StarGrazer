<!DOCTYPE html>
<html>  
     <head>  
	<link rel="stylesheet" type="text/css" href="tictactoe.css"/> 
	<script src="Position.js"></script>
	<script src="Star.js"></script>
	<script src="Event.js"></script>
	<script src="Player.js"></script>
	<script type="text/javascript">  
//Global Variables
var nr_columns = 3;
var from = undefined;
var to = undefined;

//Instanciate Arrays
window.onload=function(){
	// create universe
	Star.starsCreate();
	// 2 players
	Player.playersCreate(2);
	// set current player to undefined
	setPlayer(-1);
}

// reset screen
function reset() {
	from = undefined;
	to = undefined;
	document.getElementById("from").value = "";
	document.getElementById("to").value = "";
	document.getElementById("ships").value = "1";
	document.getElementById("events").value = "";
	document.getElementById("events").value = "";

	updateSendButton();
}

function setFrom(f) {
	from = f;
	if (undefined == from) {
		reset();
	}
	else {
		document.getElementById("from").value = from.name;
	}
}

function updateStatus(star) {
	var status = "Name Distance";
	if (currentPlayer != -1) {
		status = status + " + Ships";
	}
	status = star.nearestStars().reduce(function(stat, s) {
		return stat + "\n" + s.status(star, currentPlayer);
	}, status);
	
	document.getElementById("events").value = status;
}

function updateEvents() {
	if (currentPlayer > 0) {
		var events = players[currentPlayer].visibleEvents();
		var text = "Events visible to current player";
		for (var e=0; e < events.length; e++) {
			text = text + "\n" + events[e].text;
		}
		document.getElementById("events").value = text;
	}
}

//Game methods
function canvasClicked(canvasNumber){
	// retrieve star located in clicked canvas
	var star = Star.getStar(canvasNumber);

	if(undefined != star) {
		// give info with this star as center
		updateStatus(star);

		if (undefined != from) {
			// from already filled in
			if (star.name == from.name) {
	console.log("reset because " + from.name + " equals " + star.name);
				// clicked canvas equals from, reset
				reset();
			} else {
				to = star;
				document.getElementById("to").value = star.name;
			}
		}
		else {
			if (star.owner == currentPlayer) {
				console.log("set from");
				setFrom(star);
			}
		}
	}
	else {
		// clicked canvas is empty, reset all screen info
		console.log("reset because empty canvas clicked");
		reset();
	}

	updateSendButton();
}

function checkForWinners(symbol){
	var winner = true;
	for(var s = 0;s < stars.length; s++) {
		if (stars[s].owner != symbol) {
			winner = false;
		}
	}
	return winner;
}

function playAgain(){
	y=confirm("PLAY AGAIN?");
	if(y==true){
		alert("OKAY! ^^/>");
		location.reload(true);
	}
	else{
		alert("SO LONG,SUCKER!");
		}
}

function cancel() {
	t = document.getElementById("f");
	t.value = "B";
}

function updateSendButton() {
	if ((undefined != from) && (undefined != to)){
		document.getElementById("send").disabled = false;
	} else {
		document.getElementById("send").disabled = true;
	}
	// document.getElementById("events").value = "test\ntest";
}

// give the order to send ships
function send() {
	var e = new DepartureEvent(players[currentPlayer].time, from, to, document.getElementById("ships").value );
	players[currentPlayer].increaseTime();
	// to do: check if current player should continue
	updateEvents();

	if(checkForWinners(currentPlayer)){
		var id = "player" + currentPlayer;
		t = document.getElementById(id);
		var name = t.value;
		alert("THE GAME IS OVER! " + name + " has won");
		location.reload(true);
	} else {
			Star.setCurrentPlayer(currentPlayer);
	}
}

// set player and update screen
function setPlayer(id) {
	// reset screen
	reset();
	// set current player, may be undefined
	currentPlayer = id;
	if (id >=0 ) {
		var currentTime = players[currentPlayer].time;
	} else {
		currentTime = 0;
	}

	updateSendButton();
	updateEvents();
	Star.setCurrentPlayer(currentPlayer);
}

    </script> 
     </head>  
     <body>  
	 <h1>Stargrazer</h1
	 <table>
	 <td>
	 <textarea rows="9" cols="50" id="events" readonly>
	 </textarea>
	 </td>
	 <td>
	<button onclick="setPlayer(1)">I am player 1</button>
	<br>
	<canvas id = "canvas0"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(00)"></canvas>
	<canvas id = "canvas1"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(01)"></canvas>
	<canvas id = "canvas2"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(02)"></canvas>
	<br>
	<canvas id = "canvas10"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(10)"></canvas>
	<canvas id = "canvas11"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(11)"></canvas>
	<canvas id = "canvas12"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(12)"></canvas>
	<br>
	<canvas id = "canvas20"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(20)"></canvas>
	<canvas id = "canvas21"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(21)"></canvas>
	<canvas id = "canvas22"  width="50" height="50" style="border:1px solid black" onclick="canvasClicked(22)"></canvas>
	<br>
	<button onclick="send()" id = "send">Send</button><input type="number" name="ships" id="ships" min="1" max ="999" value="1"/> ships from 
	<input type="text" name="from" id="from" size="9" value="" readonly/> to 
	<input type="text" name="to" id="to" size="9" value="" readonly/>
	<button onclick="cancel()">Cancel</button>
	<br>
	<label>Player 1 </label><input type="text" id="player1" value="Jack"/>
	<br>
	<label>Player 2 </label><input type="text" id="player2" value="Jill"/>
	<br>
	</td>
	</table>
	<button onclick="setPlayer(2)">I am player 2</button>
	<p id="f">A</p>
	</body>
</html> 
